@startuml
class PriorityQueue<T> {
 isEmpty
 PriorityQueue(heap=new BinaryHeap())
 insert(key, value)
 extractPeek()
 changeKey(key, value)
}

class BinaryTree<T> {}

PriorityQueue --> Heap

abstract class Heap<T extends Number> {
  getSize()
  Heap(comparator=min)
  isEmpty()
  insert(...T)
  getPeek(): T
  extractPeek(): T
  replace()
  heapify()
  meld()
  merge(Heap)
}

class BinaryHeap extends Heap
BinaryHeap o-- BinaryTree
class LeftistHeap extends Heap
class BinomialHeap extends Heap
class FibonacciHeap extends Heap
class PairingHeap extends Heap
class BrodalHeap extends Heap
class RankpairingHeap extends Heap
class StrictFibonacciHeap extends Heap
class TwoTreeHeap extends Heap

@enduml